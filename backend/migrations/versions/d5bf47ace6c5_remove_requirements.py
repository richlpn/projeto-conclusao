"""remove_requirements

Revision ID: d5bf47ace6c5
Revises: d6b813c78116
Create Date: 2025-01-03 00:05:01.358868

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d5bf47ace6c5"
down_revision: Union[str, None] = "d6b813c78116"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("tasks", sa.Column("data_source_id", sa.UUID(), nullable=True))
    op.drop_constraint("tasks_requirement_id_fkey", "tasks", type_="foreignkey")
    op.create_foreign_key(
        None, "tasks", "data_sources", ["data_source_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("tasks", "requirement_id")
    op.drop_table("requirements")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tasks",
        sa.Column("requirement_id", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "tasks", type_="foreignkey")
    op.create_foreign_key(
        "tasks_requirement_id_fkey",
        "tasks",
        "requirements",
        ["requirement_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("tasks", "data_source_id")
    op.create_table(
        "requirements",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("data_source_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["data_source_id"],
            ["data_sources.id"],
            name="requirements_data_source_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="requirements_pkey"),
    )
    # ### end Alembic commands ###
